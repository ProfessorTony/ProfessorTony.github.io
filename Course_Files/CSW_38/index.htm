<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Web Animation</title>
    <!-- Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts: Inter -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@500;500;700;900&display=swap" rel="stylesheet">
    <style>
        /* Use the Inter font family */
        body {
            font-family: 'Inter', sans-serif;
        }
        /* A subtle gradient for the background */
        .gradient-bg {
            background-color: #111827;
            background-image: radial-gradient(at 47% 33%, hsl(151, 58%, 84%) 0, transparent 59%), radial-gradient(at 82% 65%, hsl(218.00, 39%, 11%) 0, transparent 55%);
        }
    </style>
</head>
<body class="gradient-bg text-gray-200 antialiased">

    <!-- Main Container -->
    <div class="container mx-auto px-4 py-8 md:py-16 max-w-4xl">

        <!-- Header Section -->
        <header class="text-center mb-12">
            <h1 class="text-4xl md:text-6xl font-black text-white tracking-tight leading-tight">Web Animation</h1>
            <p class="text-lg md:text-xl text-indigo-900 mt-2">Welcome, See if you can REPLICATE?</p>
        </header>

        <!-- Main Content Grid -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8 items-start">

            <!-- Left Column with Image and Details -->
            <div class="md:col-span-1 space-y-8">
                <!-- Main Image -->
                <img src="https://placehold.co/600x400/111827/3b82f6?text=Code+Editor" 
                     alt="Stylized image of a code editor on a screen"
                     class="rounded-2xl shadow-2xl border-2 border-gray-700 w-full h-auto object-cover"
                     onerror="this.onerror=null;this.src='https://placehold.co/600x400/111827/FFFFFF?text=Image+Error';">
                
                <!-- Meeting Info Card -->
                <div class="bg-gray-800/50 backdrop-blur-sm p-6 rounded-2xl border border-gray-700 shadow-lg">
                    <h3 class="text-xl font-bold text-white mb-4">DATE</h3>
                    <div class="space-y-4 text-gray-300">
                        <!-- Location -->
                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" /><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" /></svg>
                            <span><strong class="font-semibold text-white">Location:</strong> Shima 109</span>
                        </div>
                        <!-- Date -->
                        <div class="flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-indigo-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>
                            <span><strong class="font-semibold text-white">October:</strong> 20, 2025</span>
                        </div>
                    </div>
                </div>
                 <!-- Second Image -->
                <img src="https://placehold.co/600x400/111827/818cf8?text=Animate" 
                     alt="Abstract design representing web layout"
                     class="rounded-2xl shadow-xl border-2 border-gray-700 w-full h-auto object-cover"
                     onerror="this.onerror=null;this.src='https://placehold.co/600x400/111827/FFFFFF?text=Image+Error';">
            </div>

            <!-- Right Column with Links -->
            <div class="md:col-span-2">
                <div class="bg-gray-900/60 backdrop-blur-sm p-6 md:p-8 rounded-2xl border border-gray-700 shadow-2xl">
                    <h2 class="text-2xl md:text-3xl font-bold text-white mb-6">Animated Links</h2>
                    <div class="space-y-4">
                        <!-- First Link  -->
                        <div class="flex items-center bg-gray-800 p-4 rounded-lg transition-all duration-300 hover:bg-indigo-500/20 hover:scale-105">
                            <div class="flex-shrink-0 bg-indigo-500 text-white rounded-md h-12 w-12 flex flex-col items-center justify-center mr-4">
                                <span class="text-xs font-semibold">Link</span>
                                <span class="text-xl font-bold">1</a></span>
                            </div>
                            <div class="flex-grow">
                                <p class="text-lg font-medium text-gray-100">Github</p>
                                <p class="text-sm text-gray-400" style="text-decoration: underline;"><a href="https://github.com/">Visit Github.com!</a></p>
                            </div>
                        </div>
                        <!-- Linked -->
                        <div class="flex items-center bg-gray-800 p-4 rounded-lg transition-all duration-300 hover:bg-indigo-500/20 hover:scale-105">
                            <div class="flex-shrink-0 bg-indigo-500 text-white rounded-md h-12 w-12 flex flex-col items-center justify-center mr-4">
                                <span class="text-xs font-semibold">Link</span>
                                <span class="text-xl font-bold">2</span>
                            </div>
                            <div class="flex-grow">
                                <p class="text-lg font-medium text-gray-100">CodePen</p>
                                <p class="text-sm text-gray-400" style="text-decoration: underline;"><a href="https://codepen.io/">Visit CodePen.io!</a></p>
                            </div>
                        </div>
                        <!-- No Link -->
                        <div class="flex items-center bg-gray-800 p-4 rounded-lg transition-all duration-300 hover:bg-indigo-500/20 hover:scale-105">
                            <div class="flex-shrink-0 bg-indigo-500 text-white rounded-md h-12 w-12 flex flex-col items-center justify-center mr-4">
                                <span class="text-xs font-semibold">NO</span>
                                <span class="text-xl font-bold">Link</span>
                            </div>
                            <div class="flex-grow">
                                <p class="text-lg font-medium text-gray-100">W3Schools</p>
                                <p class="text-sm text-gray-400">Visit W3Schools!</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Animation Canvas -->
                <div class="mt-8 bg-gray-900/60 backdrop-blur-sm p-6 md:p-8 rounded-2xl border border-gray-700 shadow-2xl">
                    <h3 class="text-xl font-bold text-white mb-4">Code in Motion</h3>
                    <canvas id="animationCanvas" class="w-full h-64 rounded-lg"></canvas>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <footer class="text-center mt-16">
            <p class="text-gray-500"> Let's build something amazing!</p>
        </footer>

    </div>

    <script>
        // Canvas Animation Script
        const canvas = document.getElementById('animationCanvas');
        if (canvas) {
            const ctx = canvas.getContext('2d');
            let particlesArray;

            // Set canvas size based on its container
            function setCanvasSize() {
                canvas.width = canvas.offsetWidth;
                canvas.height = canvas.offsetHeight;
            }

            // Particle class
            class Particle {
                constructor(x, y, directionX, directionY, size, color) {
                    this.x = x;
                    this.y = y;
                    this.directionX = directionX;
                    this.directionY = directionY;
                    this.size = size;
                    this.color = color;
                }
                // Method to draw individual particle
                draw() {
                    ctx.beginPath();
                    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2, false);
                    ctx.fillStyle = this.color;
                    ctx.fill();
                }
                // Check particle position, move the particle, draw the particle
                update() {
                    if (this.x > canvas.width || this.x < 0) {
                        this.directionX = -this.directionX;
                    }
                    if (this.y > canvas.height || this.y < 0) {
                        this.directionY = -this.directionY;
                    }
                    this.x += this.directionX;
                    this.y += this.directionY;
                    this.draw();
                }
            }

            // Create particle array
            function init() {
                particlesArray = [];
                let numberOfParticles = (canvas.height * canvas.width) / 9000;
                for (let i = 0; i < numberOfParticles; i++) {
                    let size = (Math.random() * 5) + 1;
                    let x = (Math.random() * ((canvas.width - size * 2) - (size * 2)) + size * 2);
                    let y = (Math.random() * ((canvas.height - size * 2) - (size * 2)) + size * 2);
                    let directionX = (Math.random() * .4) - .2;
                    let directionY = (Math.random() * .4) - .2;
                    let color = 'rgba(129, 140, 248, ' + (Math.random() * 0.5 + 0.3) + ')'; // Indigo color

                    particlesArray.push(new Particle(x, y, directionX, directionY, size, color));
                }
            }

            // Animation loop
            function animate() {
                requestAnimationFrame(animate);
                ctx.clearRect(0, 0, canvas.width, canvas.height);

                for (let i = 0; i < particlesArray.length; i++) {
                    particlesArray[i].update();
                }
            }

            // Resize event
            window.addEventListener('resize', () => {
                setCanvasSize();
                init();
            });

            // Initial setup - ensures canvas is ready
            setCanvasSize();
            init();
            animate();
        }
    </script>

</body>
</html>
